#!/bin/bash
# michael cousins
# shell script to link my dotfiles to my home directory

SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

# dotfile directories is this one
DOTLOC=~/dotfiles
# private dotfiles live in my dropbox
if [ -d "$HOME/Dropbox" ]; then
  DROPBOX=~/Dropbox
elif [ -d "$HOME/Dropbox (Personal)" ]; then
  DROPBOX=~/Dropbox\ \(Personal\)
else
  DROPBOX="null"
fi
PRIVDOTLOC="$DROPBOX/privatedots"
# place to backup old dotfiles
DOTOLD=~/dotfiles_old
# place to simlink new dotfiles into
DOTNEW=~

# identify dotfiles
DOTS=()
# ignore this script
IGNORE=`basename $0`
# ignore any files in the 'do_not_link' list
while read line; do
  IGNORE+="|$line"
done < "$DOTLOC/do_not_link"

# gather all the dotfiles to be linked
for f in $DOTLOC/*; do
  # exclude any files we want to exclude
  if [[ ! $f =~ $IGNORE ]]; then
    DOTS+=("$f")
  fi
done
# gather any private dotfiles (if private dots directory exists)
if [ -d "$PRIVDOTLOC" ]; then
  for f in $PRIVDOTLOC/*; do
    # exclude any files we want to exclude
    if [[ ! $f =~ $IGNORE ]]; then
      DOTS+=("$f")
    fi
  done
fi

# run through all the files in DOTS array
NO_OLD=true
for f in ${DOTS[@]}; do
  # objects
  OBJ=()
  # get filename
  FILE=`basename $f`
  # check if f is a directory
  if [ -d $f ]; then
    # loop over files in directory and add them to objects
    for o in $f/*; do
      # exclude any files we want to exclude
      if [[ ! $o =~ $IGNORE ]]; then
        OBJ+=(`basename $o`)
      fi
    done
  else
    OBJ+=("$FILE")
  fi

  # loop over objects
  for o in ${OBJ[@]}; do
    DIR=""
    # if the object is in a directory
    if [ "$FILE" != "$o" ]; then
      DIR="$FILE/"
      # make sure dot dir exists
      if [ ! -d $DOTNEW/.$FILE ]; then
        mkdir $DOTNEW/.$FILE
        echo "creating .$FILE directory"
      fi
    fi

    # check if this dotfile already exists (and is not a symlink)
    # thanks to @kaben for fixing this part
    if [ -f $DOTNEW/.$DIR$o ] && [ ! -h $DOTNEW/.$DIR$o ]; then
      if $NO_OLD; then
        echo "existing dotfiles found and will be backed up to $DOTOLD"
      fi
      # check to make sure there's a dotfiles_old directory
      if [ ! -d $DOTOLD ]; then
        echo "creating $DOTOLD directory"
        mkdir $DOTOLD
      fi
      if [ ! -d $DOTOLD/$DIR ]; then
        echo "creating $DOTOLD/$DIR directory"
        mkdir $DOTOLD/$DIR
      fi
      # clear the flag so we don't get the backup message again
      NO_OLD=false
      # back up the files
      mv -f $DOTNEW/.$DIR$o $DOTOLD/$DIR$o
      echo "backed up $o"
    fi

    # symlink the new one in
    if [ "$FILE" = "$o" ]; then
      ln -sf $f $DOTNEW/.$o
      echo "symlinked .$o"
    else
      ln -sf $f/$o $DOTNEW/.$DIR$o
      echo "symlinked .$DIR$o"
    fi
  done
done

# restore $IFS
IFS=$SAVEIFS
